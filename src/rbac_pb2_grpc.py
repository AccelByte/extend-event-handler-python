# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import rbac_pb2 as rbac__pb2


class RoleRoleCreatedServiceStub(object):
    """--- service ---

    Publishes a RoleCreated to the Role channel. (oneOf variant) (role RoleCreated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.rbac.v1.RoleRoleCreatedService/OnMessage',
                request_serializer=rbac__pb2.RoleCreated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class RoleRoleCreatedServiceServicer(object):
    """--- service ---

    Publishes a RoleCreated to the Role channel. (oneOf variant) (role RoleCreated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RoleRoleCreatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=rbac__pb2.RoleCreated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.rbac.v1.RoleRoleCreatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RoleRoleCreatedService(object):
    """--- service ---

    Publishes a RoleCreated to the Role channel. (oneOf variant) (role RoleCreated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.rbac.v1.RoleRoleCreatedService/OnMessage',
            rbac__pb2.RoleCreated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RoleRoleDeletedServiceStub(object):
    """Publishes a RoleDeleted to the Role channel. (oneOf variant) (role RoleDeleted)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.rbac.v1.RoleRoleDeletedService/OnMessage',
                request_serializer=rbac__pb2.RoleDeleted.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class RoleRoleDeletedServiceServicer(object):
    """Publishes a RoleDeleted to the Role channel. (oneOf variant) (role RoleDeleted)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RoleRoleDeletedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=rbac__pb2.RoleDeleted.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.rbac.v1.RoleRoleDeletedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RoleRoleDeletedService(object):
    """Publishes a RoleDeleted to the Role channel. (oneOf variant) (role RoleDeleted)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.rbac.v1.RoleRoleDeletedService/OnMessage',
            rbac__pb2.RoleDeleted.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RoleRoleUpdatedServiceStub(object):
    """Publishes a RoleUpdated to the Role channel. (oneOf variant) (role RoleUpdated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.rbac.v1.RoleRoleUpdatedService/OnMessage',
                request_serializer=rbac__pb2.RoleUpdated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class RoleRoleUpdatedServiceServicer(object):
    """Publishes a RoleUpdated to the Role channel. (oneOf variant) (role RoleUpdated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RoleRoleUpdatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=rbac__pb2.RoleUpdated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.rbac.v1.RoleRoleUpdatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RoleRoleUpdatedService(object):
    """Publishes a RoleUpdated to the Role channel. (oneOf variant) (role RoleUpdated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.rbac.v1.RoleRoleUpdatedService/OnMessage',
            rbac__pb2.RoleUpdated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RolePermissionsRolePermissionCreatedServiceStub(object):
    """Publishes a RolePermissionCreated to the Role Permissions channel. (oneOf variant) (rolePermissions RolePermissionCreated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.rbac.v1.RolePermissionsRolePermissionCreatedService/OnMessage',
                request_serializer=rbac__pb2.RolePermissionCreated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class RolePermissionsRolePermissionCreatedServiceServicer(object):
    """Publishes a RolePermissionCreated to the Role Permissions channel. (oneOf variant) (rolePermissions RolePermissionCreated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RolePermissionsRolePermissionCreatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=rbac__pb2.RolePermissionCreated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.rbac.v1.RolePermissionsRolePermissionCreatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RolePermissionsRolePermissionCreatedService(object):
    """Publishes a RolePermissionCreated to the Role Permissions channel. (oneOf variant) (rolePermissions RolePermissionCreated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.rbac.v1.RolePermissionsRolePermissionCreatedService/OnMessage',
            rbac__pb2.RolePermissionCreated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RolePermissionsRolePermissionDeletedServiceStub(object):
    """Publishes a RolePermissionDeleted to the Role Permissions channel. (oneOf variant) (rolePermissions RolePermissionDeleted)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.rbac.v1.RolePermissionsRolePermissionDeletedService/OnMessage',
                request_serializer=rbac__pb2.RolePermissionDeleted.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class RolePermissionsRolePermissionDeletedServiceServicer(object):
    """Publishes a RolePermissionDeleted to the Role Permissions channel. (oneOf variant) (rolePermissions RolePermissionDeleted)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RolePermissionsRolePermissionDeletedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=rbac__pb2.RolePermissionDeleted.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.rbac.v1.RolePermissionsRolePermissionDeletedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RolePermissionsRolePermissionDeletedService(object):
    """Publishes a RolePermissionDeleted to the Role Permissions channel. (oneOf variant) (rolePermissions RolePermissionDeleted)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.rbac.v1.RolePermissionsRolePermissionDeletedService/OnMessage',
            rbac__pb2.RolePermissionDeleted.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RolePermissionsRolePermissionUpdatedServiceStub(object):
    """Publishes a RolePermissionUpdated to the Role Permissions channel. (oneOf variant) (rolePermissions RolePermissionUpdated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.rbac.v1.RolePermissionsRolePermissionUpdatedService/OnMessage',
                request_serializer=rbac__pb2.RolePermissionUpdated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class RolePermissionsRolePermissionUpdatedServiceServicer(object):
    """Publishes a RolePermissionUpdated to the Role Permissions channel. (oneOf variant) (rolePermissions RolePermissionUpdated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RolePermissionsRolePermissionUpdatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=rbac__pb2.RolePermissionUpdated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.rbac.v1.RolePermissionsRolePermissionUpdatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RolePermissionsRolePermissionUpdatedService(object):
    """Publishes a RolePermissionUpdated to the Role Permissions channel. (oneOf variant) (rolePermissions RolePermissionUpdated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.rbac.v1.RolePermissionsRolePermissionUpdatedService/OnMessage',
            rbac__pb2.RolePermissionUpdated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RoleManagerRoleManagerCreatedServiceStub(object):
    """Publishes a RoleManagerCreated to the Role Manager channel. (oneOf variant) (roleManager RoleManagerCreated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.rbac.v1.RoleManagerRoleManagerCreatedService/OnMessage',
                request_serializer=rbac__pb2.RoleManagerCreated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class RoleManagerRoleManagerCreatedServiceServicer(object):
    """Publishes a RoleManagerCreated to the Role Manager channel. (oneOf variant) (roleManager RoleManagerCreated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RoleManagerRoleManagerCreatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=rbac__pb2.RoleManagerCreated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.rbac.v1.RoleManagerRoleManagerCreatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RoleManagerRoleManagerCreatedService(object):
    """Publishes a RoleManagerCreated to the Role Manager channel. (oneOf variant) (roleManager RoleManagerCreated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.rbac.v1.RoleManagerRoleManagerCreatedService/OnMessage',
            rbac__pb2.RoleManagerCreated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RoleManagerRoleManagerDeletedServiceStub(object):
    """Publishes a RoleManagerDeleted to the Role Manager channel. (oneOf variant) (roleManager RoleManagerDeleted)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.rbac.v1.RoleManagerRoleManagerDeletedService/OnMessage',
                request_serializer=rbac__pb2.RoleManagerDeleted.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class RoleManagerRoleManagerDeletedServiceServicer(object):
    """Publishes a RoleManagerDeleted to the Role Manager channel. (oneOf variant) (roleManager RoleManagerDeleted)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RoleManagerRoleManagerDeletedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=rbac__pb2.RoleManagerDeleted.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.rbac.v1.RoleManagerRoleManagerDeletedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RoleManagerRoleManagerDeletedService(object):
    """Publishes a RoleManagerDeleted to the Role Manager channel. (oneOf variant) (roleManager RoleManagerDeleted)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.rbac.v1.RoleManagerRoleManagerDeletedService/OnMessage',
            rbac__pb2.RoleManagerDeleted.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RoleMemberRoleMemberCreatedServiceStub(object):
    """Publishes a RoleMemberCreated to the Role Member channel. (oneOf variant) (roleMember RoleMemberCreated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.rbac.v1.RoleMemberRoleMemberCreatedService/OnMessage',
                request_serializer=rbac__pb2.RoleMemberCreated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class RoleMemberRoleMemberCreatedServiceServicer(object):
    """Publishes a RoleMemberCreated to the Role Member channel. (oneOf variant) (roleMember RoleMemberCreated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RoleMemberRoleMemberCreatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=rbac__pb2.RoleMemberCreated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.rbac.v1.RoleMemberRoleMemberCreatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RoleMemberRoleMemberCreatedService(object):
    """Publishes a RoleMemberCreated to the Role Member channel. (oneOf variant) (roleMember RoleMemberCreated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.rbac.v1.RoleMemberRoleMemberCreatedService/OnMessage',
            rbac__pb2.RoleMemberCreated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RoleMemberRoleMemberDeletedServiceStub(object):
    """Publishes a RoleMemberDeleted to the Role Member channel. (oneOf variant) (roleMember RoleMemberDeleted)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.rbac.v1.RoleMemberRoleMemberDeletedService/OnMessage',
                request_serializer=rbac__pb2.RoleMemberDeleted.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class RoleMemberRoleMemberDeletedServiceServicer(object):
    """Publishes a RoleMemberDeleted to the Role Member channel. (oneOf variant) (roleMember RoleMemberDeleted)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RoleMemberRoleMemberDeletedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=rbac__pb2.RoleMemberDeleted.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.rbac.v1.RoleMemberRoleMemberDeletedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RoleMemberRoleMemberDeletedService(object):
    """Publishes a RoleMemberDeleted to the Role Member channel. (oneOf variant) (roleMember RoleMemberDeleted)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.rbac.v1.RoleMemberRoleMemberDeletedService/OnMessage',
            rbac__pb2.RoleMemberDeleted.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
