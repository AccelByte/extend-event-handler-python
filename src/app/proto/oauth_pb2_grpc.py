# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from app.proto import oauth_pb2 as app_dot_proto_dot_oauth__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class OauthRequestOauthRequestAuthorizedServiceStub(object):
    """--- service ---

    Publishes a message to the Oauth Request channel. (oauthRequest OauthRequestAuthorized)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.oauth.v1.OauthRequestOauthRequestAuthorizedService/OnMessage',
                request_serializer=app_dot_proto_dot_oauth__pb2.OauthRequestAuthorized.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class OauthRequestOauthRequestAuthorizedServiceServicer(object):
    """--- service ---

    Publishes a message to the Oauth Request channel. (oauthRequest OauthRequestAuthorized)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OauthRequestOauthRequestAuthorizedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_oauth__pb2.OauthRequestAuthorized.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.oauth.v1.OauthRequestOauthRequestAuthorizedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OauthRequestOauthRequestAuthorizedService(object):
    """--- service ---

    Publishes a message to the Oauth Request channel. (oauthRequest OauthRequestAuthorized)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.oauth.v1.OauthRequestOauthRequestAuthorizedService/OnMessage',
            app_dot_proto_dot_oauth__pb2.OauthRequestAuthorized.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class OauthTokenOauthTokenGeneratedServiceStub(object):
    """Publishes a OauthTokenGenerated to the Oauth Token channel. (oneOf variant) (oauthToken OauthTokenGenerated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.oauth.v1.OauthTokenOauthTokenGeneratedService/OnMessage',
                request_serializer=app_dot_proto_dot_oauth__pb2.OauthTokenGenerated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class OauthTokenOauthTokenGeneratedServiceServicer(object):
    """Publishes a OauthTokenGenerated to the Oauth Token channel. (oneOf variant) (oauthToken OauthTokenGenerated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OauthTokenOauthTokenGeneratedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_oauth__pb2.OauthTokenGenerated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.oauth.v1.OauthTokenOauthTokenGeneratedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OauthTokenOauthTokenGeneratedService(object):
    """Publishes a OauthTokenGenerated to the Oauth Token channel. (oneOf variant) (oauthToken OauthTokenGenerated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.oauth.v1.OauthTokenOauthTokenGeneratedService/OnMessage',
            app_dot_proto_dot_oauth__pb2.OauthTokenGenerated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class OauthTokenOauthTokenRevokedServiceStub(object):
    """Publishes a OauthTokenRevoked to the Oauth Token channel. (oneOf variant) (oauthToken OauthTokenRevoked)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.oauth.v1.OauthTokenOauthTokenRevokedService/OnMessage',
                request_serializer=app_dot_proto_dot_oauth__pb2.OauthTokenRevoked.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class OauthTokenOauthTokenRevokedServiceServicer(object):
    """Publishes a OauthTokenRevoked to the Oauth Token channel. (oneOf variant) (oauthToken OauthTokenRevoked)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OauthTokenOauthTokenRevokedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_oauth__pb2.OauthTokenRevoked.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.oauth.v1.OauthTokenOauthTokenRevokedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OauthTokenOauthTokenRevokedService(object):
    """Publishes a OauthTokenRevoked to the Oauth Token channel. (oneOf variant) (oauthToken OauthTokenRevoked)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.oauth.v1.OauthTokenOauthTokenRevokedService/OnMessage',
            app_dot_proto_dot_oauth__pb2.OauthTokenRevoked.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class OauthThirdPartyRequestOauthThirdPartyRequestAuthorizedServiceStub(object):
    """Publishes a message to the Oauth Third Party Request channel. (oauthThirdPartyRequest OauthThirdPartyRequestAuthorized)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.oauth.v1.OauthThirdPartyRequestOauthThirdPartyRequestAuthorizedService/OnMessage',
                request_serializer=app_dot_proto_dot_oauth__pb2.OauthThirdPartyRequestAuthorized.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class OauthThirdPartyRequestOauthThirdPartyRequestAuthorizedServiceServicer(object):
    """Publishes a message to the Oauth Third Party Request channel. (oauthThirdPartyRequest OauthThirdPartyRequestAuthorized)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OauthThirdPartyRequestOauthThirdPartyRequestAuthorizedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_oauth__pb2.OauthThirdPartyRequestAuthorized.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.oauth.v1.OauthThirdPartyRequestOauthThirdPartyRequestAuthorizedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OauthThirdPartyRequestOauthThirdPartyRequestAuthorizedService(object):
    """Publishes a message to the Oauth Third Party Request channel. (oauthThirdPartyRequest OauthThirdPartyRequestAuthorized)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.oauth.v1.OauthThirdPartyRequestOauthThirdPartyRequestAuthorizedService/OnMessage',
            app_dot_proto_dot_oauth__pb2.OauthThirdPartyRequestAuthorized.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class OauthThirdPartyTokenOauthThirdPartyTokenGeneratedServiceStub(object):
    """Publishes a message to the Oauth Third Party Token channel. (oauthThirdPartyToken OauthThirdPartyTokenGenerated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.oauth.v1.OauthThirdPartyTokenOauthThirdPartyTokenGeneratedService/OnMessage',
                request_serializer=app_dot_proto_dot_oauth__pb2.OauthThirdPartyTokenGenerated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class OauthThirdPartyTokenOauthThirdPartyTokenGeneratedServiceServicer(object):
    """Publishes a message to the Oauth Third Party Token channel. (oauthThirdPartyToken OauthThirdPartyTokenGenerated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OauthThirdPartyTokenOauthThirdPartyTokenGeneratedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_oauth__pb2.OauthThirdPartyTokenGenerated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.oauth.v1.OauthThirdPartyTokenOauthThirdPartyTokenGeneratedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OauthThirdPartyTokenOauthThirdPartyTokenGeneratedService(object):
    """Publishes a message to the Oauth Third Party Token channel. (oauthThirdPartyToken OauthThirdPartyTokenGenerated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.oauth.v1.OauthThirdPartyTokenOauthThirdPartyTokenGeneratedService/OnMessage',
            app_dot_proto_dot_oauth__pb2.OauthThirdPartyTokenGenerated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
