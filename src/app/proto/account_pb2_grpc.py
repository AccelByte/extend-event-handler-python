# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from app.proto import account_pb2 as app_dot_proto_dot_account__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class UserAccountUserAccountCreatedServiceStub(object):
    """--- service ---

    Publishes a UserAccountCreated to the User Account channel. (oneOf variant) (userAccount UserAccountCreated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAccountUserAccountCreatedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserAccountCreated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAccountUserAccountCreatedServiceServicer(object):
    """--- service ---

    Publishes a UserAccountCreated to the User Account channel. (oneOf variant) (userAccount UserAccountCreated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAccountUserAccountCreatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserAccountCreated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAccountUserAccountCreatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAccountUserAccountCreatedService(object):
    """--- service ---

    Publishes a UserAccountCreated to the User Account channel. (oneOf variant) (userAccount UserAccountCreated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAccountUserAccountCreatedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserAccountCreated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAccountUserAccountDeletedServiceStub(object):
    """Publishes a UserAccountDeleted to the User Account channel. (oneOf variant) (userAccount UserAccountDeleted)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAccountUserAccountDeletedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserAccountDeleted.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAccountUserAccountDeletedServiceServicer(object):
    """Publishes a UserAccountDeleted to the User Account channel. (oneOf variant) (userAccount UserAccountDeleted)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAccountUserAccountDeletedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserAccountDeleted.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAccountUserAccountDeletedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAccountUserAccountDeletedService(object):
    """Publishes a UserAccountDeleted to the User Account channel. (oneOf variant) (userAccount UserAccountDeleted)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAccountUserAccountDeletedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserAccountDeleted.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAccountUserAccountEnabledServiceStub(object):
    """Publishes a UserAccountEnabled to the User Account channel. (oneOf variant) (userAccount UserAccountEnabled)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAccountUserAccountEnabledService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserAccountEnabled.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAccountUserAccountEnabledServiceServicer(object):
    """Publishes a UserAccountEnabled to the User Account channel. (oneOf variant) (userAccount UserAccountEnabled)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAccountUserAccountEnabledServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserAccountEnabled.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAccountUserAccountEnabledService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAccountUserAccountEnabledService(object):
    """Publishes a UserAccountEnabled to the User Account channel. (oneOf variant) (userAccount UserAccountEnabled)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAccountUserAccountEnabledService/OnMessage',
            app_dot_proto_dot_account__pb2.UserAccountEnabled.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAccountUserAccountDisabledServiceStub(object):
    """Publishes a UserAccountDisabled to the User Account channel. (oneOf variant) (userAccount UserAccountDisabled)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAccountUserAccountDisabledService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserAccountDisabled.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAccountUserAccountDisabledServiceServicer(object):
    """Publishes a UserAccountDisabled to the User Account channel. (oneOf variant) (userAccount UserAccountDisabled)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAccountUserAccountDisabledServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserAccountDisabled.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAccountUserAccountDisabledService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAccountUserAccountDisabledService(object):
    """Publishes a UserAccountDisabled to the User Account channel. (oneOf variant) (userAccount UserAccountDisabled)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAccountUserAccountDisabledService/OnMessage',
            app_dot_proto_dot_account__pb2.UserAccountDisabled.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAccountUserAccountEmailUpdatedServiceStub(object):
    """Publishes a UserAccountEmailUpdated to the User Account channel. (oneOf variant) (userAccount UserAccountEmailUpdated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAccountUserAccountEmailUpdatedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserAccountEmailUpdated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAccountUserAccountEmailUpdatedServiceServicer(object):
    """Publishes a UserAccountEmailUpdated to the User Account channel. (oneOf variant) (userAccount UserAccountEmailUpdated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAccountUserAccountEmailUpdatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserAccountEmailUpdated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAccountUserAccountEmailUpdatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAccountUserAccountEmailUpdatedService(object):
    """Publishes a UserAccountEmailUpdated to the User Account channel. (oneOf variant) (userAccount UserAccountEmailUpdated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAccountUserAccountEmailUpdatedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserAccountEmailUpdated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAccountUserAccountPasswordUpdatedServiceStub(object):
    """Publishes a UserAccountPasswordUpdated to the User Account channel. (oneOf variant) (userAccount UserAccountPasswordUpdated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAccountUserAccountPasswordUpdatedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserAccountPasswordUpdated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAccountUserAccountPasswordUpdatedServiceServicer(object):
    """Publishes a UserAccountPasswordUpdated to the User Account channel. (oneOf variant) (userAccount UserAccountPasswordUpdated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAccountUserAccountPasswordUpdatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserAccountPasswordUpdated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAccountUserAccountPasswordUpdatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAccountUserAccountPasswordUpdatedService(object):
    """Publishes a UserAccountPasswordUpdated to the User Account channel. (oneOf variant) (userAccount UserAccountPasswordUpdated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAccountUserAccountPasswordUpdatedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserAccountPasswordUpdated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAccountUserAccountBannedServiceStub(object):
    """Publishes a UserAccountBanned to the User Account channel. (oneOf variant) (userAccount UserAccountBanned)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAccountUserAccountBannedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserAccountBanned.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAccountUserAccountBannedServiceServicer(object):
    """Publishes a UserAccountBanned to the User Account channel. (oneOf variant) (userAccount UserAccountBanned)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAccountUserAccountBannedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserAccountBanned.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAccountUserAccountBannedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAccountUserAccountBannedService(object):
    """Publishes a UserAccountBanned to the User Account channel. (oneOf variant) (userAccount UserAccountBanned)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAccountUserAccountBannedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserAccountBanned.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAccountUserAccountUnbannedServiceStub(object):
    """Publishes a UserAccountUnbanned to the User Account channel. (oneOf variant) (userAccount UserAccountUnbanned)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAccountUserAccountUnbannedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserAccountUnbanned.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAccountUserAccountUnbannedServiceServicer(object):
    """Publishes a UserAccountUnbanned to the User Account channel. (oneOf variant) (userAccount UserAccountUnbanned)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAccountUserAccountUnbannedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserAccountUnbanned.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAccountUserAccountUnbannedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAccountUserAccountUnbannedService(object):
    """Publishes a UserAccountUnbanned to the User Account channel. (oneOf variant) (userAccount UserAccountUnbanned)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAccountUserAccountUnbannedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserAccountUnbanned.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAccountUserAccountVerifiedServiceStub(object):
    """Publishes a UserAccountVerified to the User Account channel. (oneOf variant) (userAccount UserAccountVerified)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAccountUserAccountVerifiedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserAccountVerified.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAccountUserAccountVerifiedServiceServicer(object):
    """Publishes a UserAccountVerified to the User Account channel. (oneOf variant) (userAccount UserAccountVerified)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAccountUserAccountVerifiedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserAccountVerified.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAccountUserAccountVerifiedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAccountUserAccountVerifiedService(object):
    """Publishes a UserAccountVerified to the User Account channel. (oneOf variant) (userAccount UserAccountVerified)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAccountUserAccountVerifiedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserAccountVerified.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAccountUserAccountLinkedServiceStub(object):
    """Publishes a UserAccountLinked to the User Account channel. (oneOf variant) (userAccount UserAccountLinked)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAccountUserAccountLinkedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserAccountLinked.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAccountUserAccountLinkedServiceServicer(object):
    """Publishes a UserAccountLinked to the User Account channel. (oneOf variant) (userAccount UserAccountLinked)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAccountUserAccountLinkedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserAccountLinked.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAccountUserAccountLinkedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAccountUserAccountLinkedService(object):
    """Publishes a UserAccountLinked to the User Account channel. (oneOf variant) (userAccount UserAccountLinked)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAccountUserAccountLinkedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserAccountLinked.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAccountUserAccountUnlinkedServiceStub(object):
    """Publishes a UserAccountUnlinked to the User Account channel. (oneOf variant) (userAccount UserAccountUnlinked)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAccountUserAccountUnlinkedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserAccountUnlinked.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAccountUserAccountUnlinkedServiceServicer(object):
    """Publishes a UserAccountUnlinked to the User Account channel. (oneOf variant) (userAccount UserAccountUnlinked)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAccountUserAccountUnlinkedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserAccountUnlinked.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAccountUserAccountUnlinkedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAccountUserAccountUnlinkedService(object):
    """Publishes a UserAccountUnlinked to the User Account channel. (oneOf variant) (userAccount UserAccountUnlinked)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAccountUserAccountUnlinkedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserAccountUnlinked.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAccountUserAccountUpgradedServiceStub(object):
    """Publishes a UserAccountUpgraded to the User Account channel. (oneOf variant) (userAccount UserAccountUpgraded)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAccountUserAccountUpgradedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserAccountUpgraded.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAccountUserAccountUpgradedServiceServicer(object):
    """Publishes a UserAccountUpgraded to the User Account channel. (oneOf variant) (userAccount UserAccountUpgraded)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAccountUserAccountUpgradedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserAccountUpgraded.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAccountUserAccountUpgradedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAccountUserAccountUpgradedService(object):
    """Publishes a UserAccountUpgraded to the User Account channel. (oneOf variant) (userAccount UserAccountUpgraded)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAccountUserAccountUpgradedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserAccountUpgraded.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAccountGameUserAccountCreatedServiceStub(object):
    """Publishes a GameUserAccountCreated to the User Account channel. (oneOf variant) (userAccount GameUserAccountCreated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAccountGameUserAccountCreatedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.GameUserAccountCreated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAccountGameUserAccountCreatedServiceServicer(object):
    """Publishes a GameUserAccountCreated to the User Account channel. (oneOf variant) (userAccount GameUserAccountCreated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAccountGameUserAccountCreatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.GameUserAccountCreated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAccountGameUserAccountCreatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAccountGameUserAccountCreatedService(object):
    """Publishes a GameUserAccountCreated to the User Account channel. (oneOf variant) (userAccount GameUserAccountCreated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAccountGameUserAccountCreatedService/OnMessage',
            app_dot_proto_dot_account__pb2.GameUserAccountCreated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAccountThirdPartyAccountCreatedServiceStub(object):
    """Publishes a ThirdPartyAccountCreated to the User Account channel. (oneOf variant) (userAccount ThirdPartyAccountCreated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAccountThirdPartyAccountCreatedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.ThirdPartyAccountCreated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAccountThirdPartyAccountCreatedServiceServicer(object):
    """Publishes a ThirdPartyAccountCreated to the User Account channel. (oneOf variant) (userAccount ThirdPartyAccountCreated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAccountThirdPartyAccountCreatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.ThirdPartyAccountCreated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAccountThirdPartyAccountCreatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAccountThirdPartyAccountCreatedService(object):
    """Publishes a ThirdPartyAccountCreated to the User Account channel. (oneOf variant) (userAccount ThirdPartyAccountCreated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAccountThirdPartyAccountCreatedService/OnMessage',
            app_dot_proto_dot_account__pb2.ThirdPartyAccountCreated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAccountUserAccountTypeChangedServiceStub(object):
    """Publishes a UserAccountTypeChanged to the User Account channel. (oneOf variant) (userAccount UserAccountTypeChanged)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAccountUserAccountTypeChangedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserAccountTypeChanged.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAccountUserAccountTypeChangedServiceServicer(object):
    """Publishes a UserAccountTypeChanged to the User Account channel. (oneOf variant) (userAccount UserAccountTypeChanged)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAccountUserAccountTypeChangedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserAccountTypeChanged.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAccountUserAccountTypeChangedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAccountUserAccountTypeChangedService(object):
    """Publishes a UserAccountTypeChanged to the User Account channel. (oneOf variant) (userAccount UserAccountTypeChanged)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAccountUserAccountTypeChangedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserAccountTypeChanged.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAuthenticationUserLoggedInServiceStub(object):
    """Publishes a UserLoggedIn to the User Authentication channel. (oneOf variant) (userAuthentication UserLoggedIn)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAuthenticationUserLoggedInService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserLoggedIn.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAuthenticationUserLoggedInServiceServicer(object):
    """Publishes a UserLoggedIn to the User Authentication channel. (oneOf variant) (userAuthentication UserLoggedIn)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAuthenticationUserLoggedInServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserLoggedIn.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAuthenticationUserLoggedInService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAuthenticationUserLoggedInService(object):
    """Publishes a UserLoggedIn to the User Authentication channel. (oneOf variant) (userAuthentication UserLoggedIn)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAuthenticationUserLoggedInService/OnMessage',
            app_dot_proto_dot_account__pb2.UserLoggedIn.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAuthenticationUserLoggedOutServiceStub(object):
    """Publishes a UserLoggedOut to the User Authentication channel. (oneOf variant) (userAuthentication UserLoggedOut)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAuthenticationUserLoggedOutService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserLoggedOut.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAuthenticationUserLoggedOutServiceServicer(object):
    """Publishes a UserLoggedOut to the User Authentication channel. (oneOf variant) (userAuthentication UserLoggedOut)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAuthenticationUserLoggedOutServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserLoggedOut.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAuthenticationUserLoggedOutService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAuthenticationUserLoggedOutService(object):
    """Publishes a UserLoggedOut to the User Authentication channel. (oneOf variant) (userAuthentication UserLoggedOut)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAuthenticationUserLoggedOutService/OnMessage',
            app_dot_proto_dot_account__pb2.UserLoggedOut.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAuthenticationUserThirdPartyLoggedInServiceStub(object):
    """Publishes a UserThirdPartyLoggedIn to the User Authentication channel. (oneOf variant) (userAuthentication UserThirdPartyLoggedIn)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAuthenticationUserThirdPartyLoggedInService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserThirdPartyLoggedIn.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAuthenticationUserThirdPartyLoggedInServiceServicer(object):
    """Publishes a UserThirdPartyLoggedIn to the User Authentication channel. (oneOf variant) (userAuthentication UserThirdPartyLoggedIn)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAuthenticationUserThirdPartyLoggedInServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserThirdPartyLoggedIn.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAuthenticationUserThirdPartyLoggedInService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAuthenticationUserThirdPartyLoggedInService(object):
    """Publishes a UserThirdPartyLoggedIn to the User Authentication channel. (oneOf variant) (userAuthentication UserThirdPartyLoggedIn)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAuthenticationUserThirdPartyLoggedInService/OnMessage',
            app_dot_proto_dot_account__pb2.UserThirdPartyLoggedIn.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAuthenticationUserLoginFailedServiceStub(object):
    """Publishes a UserLoginFailed to the User Authentication channel. (oneOf variant) (userAuthentication UserLoginFailed)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAuthenticationUserLoginFailedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserLoginFailed.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAuthenticationUserLoginFailedServiceServicer(object):
    """Publishes a UserLoginFailed to the User Authentication channel. (oneOf variant) (userAuthentication UserLoginFailed)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAuthenticationUserLoginFailedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserLoginFailed.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAuthenticationUserLoginFailedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAuthenticationUserLoginFailedService(object):
    """Publishes a UserLoginFailed to the User Authentication channel. (oneOf variant) (userAuthentication UserLoginFailed)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAuthenticationUserLoginFailedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserLoginFailed.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserAuthenticationUserThirdPartyLoginFailedServiceStub(object):
    """Publishes a UserThirdPartyLoginFailed to the User Authentication channel. (oneOf variant) (userAuthentication UserThirdPartyLoginFailed)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserAuthenticationUserThirdPartyLoginFailedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserThirdPartyLoginFailed.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserAuthenticationUserThirdPartyLoginFailedServiceServicer(object):
    """Publishes a UserThirdPartyLoginFailed to the User Authentication channel. (oneOf variant) (userAuthentication UserThirdPartyLoginFailed)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAuthenticationUserThirdPartyLoginFailedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserThirdPartyLoginFailed.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserAuthenticationUserThirdPartyLoginFailedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAuthenticationUserThirdPartyLoginFailedService(object):
    """Publishes a UserThirdPartyLoginFailed to the User Authentication channel. (oneOf variant) (userAuthentication UserThirdPartyLoginFailed)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserAuthenticationUserThirdPartyLoginFailedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserThirdPartyLoginFailed.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserInformationUserInformationCreatedServiceStub(object):
    """Publishes a UserInformationCreated to the User Information channel. (oneOf variant) (userInformation UserInformationCreated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserInformationUserInformationCreatedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserInformationCreated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserInformationUserInformationCreatedServiceServicer(object):
    """Publishes a UserInformationCreated to the User Information channel. (oneOf variant) (userInformation UserInformationCreated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserInformationUserInformationCreatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserInformationCreated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserInformationUserInformationCreatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserInformationUserInformationCreatedService(object):
    """Publishes a UserInformationCreated to the User Information channel. (oneOf variant) (userInformation UserInformationCreated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserInformationUserInformationCreatedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserInformationCreated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserInformationUserInformationDisplayNameUpdatedServiceStub(object):
    """Publishes a UserInformationDisplayNameUpdated to the User Information channel. (oneOf variant) (userInformation UserInformationDisplayNameUpdated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserInformationUserInformationDisplayNameUpdatedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserInformationDisplayNameUpdated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserInformationUserInformationDisplayNameUpdatedServiceServicer(object):
    """Publishes a UserInformationDisplayNameUpdated to the User Information channel. (oneOf variant) (userInformation UserInformationDisplayNameUpdated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserInformationUserInformationDisplayNameUpdatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserInformationDisplayNameUpdated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserInformationUserInformationDisplayNameUpdatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserInformationUserInformationDisplayNameUpdatedService(object):
    """Publishes a UserInformationDisplayNameUpdated to the User Information channel. (oneOf variant) (userInformation UserInformationDisplayNameUpdated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserInformationUserInformationDisplayNameUpdatedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserInformationDisplayNameUpdated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserInformationUserInformationCountryUpdatedServiceStub(object):
    """Publishes a UserInformationCountryUpdated to the User Information channel. (oneOf variant) (userInformation UserInformationCountryUpdated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserInformationUserInformationCountryUpdatedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserInformationCountryUpdated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserInformationUserInformationCountryUpdatedServiceServicer(object):
    """Publishes a UserInformationCountryUpdated to the User Information channel. (oneOf variant) (userInformation UserInformationCountryUpdated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserInformationUserInformationCountryUpdatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserInformationCountryUpdated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserInformationUserInformationCountryUpdatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserInformationUserInformationCountryUpdatedService(object):
    """Publishes a UserInformationCountryUpdated to the User Information channel. (oneOf variant) (userInformation UserInformationCountryUpdated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserInformationUserInformationCountryUpdatedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserInformationCountryUpdated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserInformationUserInformationLanguageUpdatedServiceStub(object):
    """Publishes a UserInformationLanguageUpdated to the User Information channel. (oneOf variant) (userInformation UserInformationLanguageUpdated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserInformationUserInformationLanguageUpdatedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserInformationLanguageUpdated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserInformationUserInformationLanguageUpdatedServiceServicer(object):
    """Publishes a UserInformationLanguageUpdated to the User Information channel. (oneOf variant) (userInformation UserInformationLanguageUpdated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserInformationUserInformationLanguageUpdatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserInformationLanguageUpdated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserInformationUserInformationLanguageUpdatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserInformationUserInformationLanguageUpdatedService(object):
    """Publishes a UserInformationLanguageUpdated to the User Information channel. (oneOf variant) (userInformation UserInformationLanguageUpdated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserInformationUserInformationLanguageUpdatedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserInformationLanguageUpdated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserInformationUserInformationDateOfBirthUpdatedServiceStub(object):
    """Publishes a UserInformationDateOfBirthUpdated to the User Information channel. (oneOf variant) (userInformation UserInformationDateOfBirthUpdated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserInformationUserInformationDateOfBirthUpdatedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserInformationDateOfBirthUpdated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserInformationUserInformationDateOfBirthUpdatedServiceServicer(object):
    """Publishes a UserInformationDateOfBirthUpdated to the User Information channel. (oneOf variant) (userInformation UserInformationDateOfBirthUpdated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserInformationUserInformationDateOfBirthUpdatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserInformationDateOfBirthUpdated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserInformationUserInformationDateOfBirthUpdatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserInformationUserInformationDateOfBirthUpdatedService(object):
    """Publishes a UserInformationDateOfBirthUpdated to the User Information channel. (oneOf variant) (userInformation UserInformationDateOfBirthUpdated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserInformationUserInformationDateOfBirthUpdatedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserInformationDateOfBirthUpdated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserInformationUserInformationUsernameUpdatedServiceStub(object):
    """Publishes a UserInformationUsernameUpdated to the User Information channel. (oneOf variant) (userInformation UserInformationUsernameUpdated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserInformationUserInformationUsernameUpdatedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserInformationUsernameUpdated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserInformationUserInformationUsernameUpdatedServiceServicer(object):
    """Publishes a UserInformationUsernameUpdated to the User Information channel. (oneOf variant) (userInformation UserInformationUsernameUpdated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserInformationUserInformationUsernameUpdatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserInformationUsernameUpdated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserInformationUserInformationUsernameUpdatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserInformationUserInformationUsernameUpdatedService(object):
    """Publishes a UserInformationUsernameUpdated to the User Information channel. (oneOf variant) (userInformation UserInformationUsernameUpdated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserInformationUserInformationUsernameUpdatedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserInformationUsernameUpdated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserPermissionsUserPermissionsCreatedServiceStub(object):
    """Publishes a UserPermissionCreated to the User Permissions channel. (oneOf variant) (userPermissions UserPermissionsCreated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserPermissionsUserPermissionsCreatedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserPermissionCreated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserPermissionsUserPermissionsCreatedServiceServicer(object):
    """Publishes a UserPermissionCreated to the User Permissions channel. (oneOf variant) (userPermissions UserPermissionsCreated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserPermissionsUserPermissionsCreatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserPermissionCreated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserPermissionsUserPermissionsCreatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserPermissionsUserPermissionsCreatedService(object):
    """Publishes a UserPermissionCreated to the User Permissions channel. (oneOf variant) (userPermissions UserPermissionsCreated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserPermissionsUserPermissionsCreatedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserPermissionCreated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserPermissionsUserPermissionsDeletedServiceStub(object):
    """Publishes a UserPermissionDeleted to the User Permissions channel. (oneOf variant) (userPermissions UserPermissionsDeleted)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserPermissionsUserPermissionsDeletedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserPermissionDeleted.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserPermissionsUserPermissionsDeletedServiceServicer(object):
    """Publishes a UserPermissionDeleted to the User Permissions channel. (oneOf variant) (userPermissions UserPermissionsDeleted)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserPermissionsUserPermissionsDeletedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserPermissionDeleted.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserPermissionsUserPermissionsDeletedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserPermissionsUserPermissionsDeletedService(object):
    """Publishes a UserPermissionDeleted to the User Permissions channel. (oneOf variant) (userPermissions UserPermissionsDeleted)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserPermissionsUserPermissionsDeletedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserPermissionDeleted.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserRolesUserRolesCreatedServiceStub(object):
    """Publishes a UserRoleCreated to the User Roles channel. (oneOf variant) (userRoles UserRolesCreated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserRolesUserRolesCreatedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserRoleCreated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserRolesUserRolesCreatedServiceServicer(object):
    """Publishes a UserRoleCreated to the User Roles channel. (oneOf variant) (userRoles UserRolesCreated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserRolesUserRolesCreatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserRoleCreated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserRolesUserRolesCreatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserRolesUserRolesCreatedService(object):
    """Publishes a UserRoleCreated to the User Roles channel. (oneOf variant) (userRoles UserRolesCreated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserRolesUserRolesCreatedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserRoleCreated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserRolesUserRolesDeletedServiceStub(object):
    """Publishes a UserRoleDeleted to the User Roles channel. (oneOf variant) (userRoles UserRolesDeleted)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserRolesUserRolesDeletedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserRoleDeleted.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserRolesUserRolesDeletedServiceServicer(object):
    """Publishes a UserRoleDeleted to the User Roles channel. (oneOf variant) (userRoles UserRolesDeleted)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserRolesUserRolesDeletedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserRoleDeleted.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserRolesUserRolesDeletedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserRolesUserRolesDeletedService(object):
    """Publishes a UserRoleDeleted to the User Roles channel. (oneOf variant) (userRoles UserRolesDeleted)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserRolesUserRolesDeletedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserRoleDeleted.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class CountryAgeRestrictionCountryAgeRestrictionCreatedServiceStub(object):
    """Publishes a CountryAgeRestrictionCreated to the Country Age Restriction channel. (oneOf variant) (countryAgeRestriction CountryAgeRestrictionCreated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.CountryAgeRestrictionCountryAgeRestrictionCreatedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.CountryAgeRestrictionCreated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class CountryAgeRestrictionCountryAgeRestrictionCreatedServiceServicer(object):
    """Publishes a CountryAgeRestrictionCreated to the Country Age Restriction channel. (oneOf variant) (countryAgeRestriction CountryAgeRestrictionCreated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CountryAgeRestrictionCountryAgeRestrictionCreatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.CountryAgeRestrictionCreated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.CountryAgeRestrictionCountryAgeRestrictionCreatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CountryAgeRestrictionCountryAgeRestrictionCreatedService(object):
    """Publishes a CountryAgeRestrictionCreated to the Country Age Restriction channel. (oneOf variant) (countryAgeRestriction CountryAgeRestrictionCreated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.CountryAgeRestrictionCountryAgeRestrictionCreatedService/OnMessage',
            app_dot_proto_dot_account__pb2.CountryAgeRestrictionCreated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class CountryAgeRestrictionCountryAgeRestrictionUpdatedServiceStub(object):
    """Publishes a CountryAgeRestrictionUpdated to the Country Age Restriction channel. (oneOf variant) (countryAgeRestriction CountryAgeRestrictionUpdated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.CountryAgeRestrictionCountryAgeRestrictionUpdatedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.CountryAgeRestrictionUpdated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class CountryAgeRestrictionCountryAgeRestrictionUpdatedServiceServicer(object):
    """Publishes a CountryAgeRestrictionUpdated to the Country Age Restriction channel. (oneOf variant) (countryAgeRestriction CountryAgeRestrictionUpdated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CountryAgeRestrictionCountryAgeRestrictionUpdatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.CountryAgeRestrictionUpdated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.CountryAgeRestrictionCountryAgeRestrictionUpdatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CountryAgeRestrictionCountryAgeRestrictionUpdatedService(object):
    """Publishes a CountryAgeRestrictionUpdated to the Country Age Restriction channel. (oneOf variant) (countryAgeRestriction CountryAgeRestrictionUpdated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.CountryAgeRestrictionCountryAgeRestrictionUpdatedService/OnMessage',
            app_dot_proto_dot_account__pb2.CountryAgeRestrictionUpdated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserTranslationsGameUserCreatedServiceStub(object):
    """Publishes a message to the User Translations channel. (userTranslations GameUserCreated)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserTranslationsGameUserCreatedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.GameUserCreated.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserTranslationsGameUserCreatedServiceServicer(object):
    """Publishes a message to the User Translations channel. (userTranslations GameUserCreated)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserTranslationsGameUserCreatedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.GameUserCreated.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserTranslationsGameUserCreatedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserTranslationsGameUserCreatedService(object):
    """Publishes a message to the User Translations channel. (userTranslations GameUserCreated)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserTranslationsGameUserCreatedService/OnMessage',
            app_dot_proto_dot_account__pb2.GameUserCreated.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserFeatureBanChatAllBannedServiceStub(object):
    """Publishes a ChatAllBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan ChatAllBanned)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserFeatureBanChatAllBannedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.ChatAllBanned.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserFeatureBanChatAllBannedServiceServicer(object):
    """Publishes a ChatAllBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan ChatAllBanned)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserFeatureBanChatAllBannedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.ChatAllBanned.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserFeatureBanChatAllBannedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserFeatureBanChatAllBannedService(object):
    """Publishes a ChatAllBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan ChatAllBanned)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserFeatureBanChatAllBannedService/OnMessage',
            app_dot_proto_dot_account__pb2.ChatAllBanned.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserFeatureBanChatSendBannedServiceStub(object):
    """Publishes a ChatSendBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan ChatSendBanned)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserFeatureBanChatSendBannedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.ChatSendBanned.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserFeatureBanChatSendBannedServiceServicer(object):
    """Publishes a ChatSendBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan ChatSendBanned)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserFeatureBanChatSendBannedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.ChatSendBanned.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserFeatureBanChatSendBannedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserFeatureBanChatSendBannedService(object):
    """Publishes a ChatSendBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan ChatSendBanned)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserFeatureBanChatSendBannedService/OnMessage',
            app_dot_proto_dot_account__pb2.ChatSendBanned.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserFeatureBanLeaderboardBannedServiceStub(object):
    """Publishes a LeaderboardBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan LeaderboardBanned)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserFeatureBanLeaderboardBannedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.LeaderboardBanned.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserFeatureBanLeaderboardBannedServiceServicer(object):
    """Publishes a LeaderboardBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan LeaderboardBanned)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserFeatureBanLeaderboardBannedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.LeaderboardBanned.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserFeatureBanLeaderboardBannedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserFeatureBanLeaderboardBannedService(object):
    """Publishes a LeaderboardBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan LeaderboardBanned)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserFeatureBanLeaderboardBannedService/OnMessage',
            app_dot_proto_dot_account__pb2.LeaderboardBanned.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserFeatureBanStatisticsBannedServiceStub(object):
    """Publishes a StatisticsBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan StatisticsBanned)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserFeatureBanStatisticsBannedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.StatisticsBanned.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserFeatureBanStatisticsBannedServiceServicer(object):
    """Publishes a StatisticsBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan StatisticsBanned)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserFeatureBanStatisticsBannedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.StatisticsBanned.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserFeatureBanStatisticsBannedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserFeatureBanStatisticsBannedService(object):
    """Publishes a StatisticsBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan StatisticsBanned)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserFeatureBanStatisticsBannedService/OnMessage',
            app_dot_proto_dot_account__pb2.StatisticsBanned.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserFeatureBanOrderAndPaymentBannedServiceStub(object):
    """Publishes a OrderAndPaymentBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan OrderAndPaymentBanned)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserFeatureBanOrderAndPaymentBannedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.OrderAndPaymentBanned.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserFeatureBanOrderAndPaymentBannedServiceServicer(object):
    """Publishes a OrderAndPaymentBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan OrderAndPaymentBanned)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserFeatureBanOrderAndPaymentBannedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.OrderAndPaymentBanned.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserFeatureBanOrderAndPaymentBannedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserFeatureBanOrderAndPaymentBannedService(object):
    """Publishes a OrderAndPaymentBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan OrderAndPaymentBanned)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserFeatureBanOrderAndPaymentBannedService/OnMessage',
            app_dot_proto_dot_account__pb2.OrderAndPaymentBanned.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserFeatureBanMatchmakingBannedServiceStub(object):
    """Publishes a MatchmakingBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan MatchmakingBanned)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserFeatureBanMatchmakingBannedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.MatchmakingBanned.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserFeatureBanMatchmakingBannedServiceServicer(object):
    """Publishes a MatchmakingBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan MatchmakingBanned)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserFeatureBanMatchmakingBannedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.MatchmakingBanned.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserFeatureBanMatchmakingBannedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserFeatureBanMatchmakingBannedService(object):
    """Publishes a MatchmakingBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan MatchmakingBanned)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserFeatureBanMatchmakingBannedService/OnMessage',
            app_dot_proto_dot_account__pb2.MatchmakingBanned.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserFeatureBanUgcCreateUpdateBannedServiceStub(object):
    """Publishes a UgcCreateUpdateBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan UgcCreateUpdateBanned)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.UserFeatureBanUgcCreateUpdateBannedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UgcCreateUpdateBanned.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class UserFeatureBanUgcCreateUpdateBannedServiceServicer(object):
    """Publishes a UgcCreateUpdateBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan UgcCreateUpdateBanned)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserFeatureBanUgcCreateUpdateBannedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UgcCreateUpdateBanned.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.UserFeatureBanUgcCreateUpdateBannedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserFeatureBanUgcCreateUpdateBannedService(object):
    """Publishes a UgcCreateUpdateBanned to the User Feature Ban channel. (oneOf variant) (userFeatureBan UgcCreateUpdateBanned)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.UserFeatureBanUgcCreateUpdateBannedService/OnMessage',
            app_dot_proto_dot_account__pb2.UgcCreateUpdateBanned.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class LobbyUserDisconnectRequestedServiceStub(object):
    """Publishes a message to the Lobby channel. (lobby UserDisconnectRequested)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.LobbyUserDisconnectRequestedService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.UserDisconnectRequested.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class LobbyUserDisconnectRequestedServiceServicer(object):
    """Publishes a message to the Lobby channel. (lobby UserDisconnectRequested)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LobbyUserDisconnectRequestedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.UserDisconnectRequested.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.LobbyUserDisconnectRequestedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LobbyUserDisconnectRequestedService(object):
    """Publishes a message to the Lobby channel. (lobby UserDisconnectRequested)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.LobbyUserDisconnectRequestedService/OnMessage',
            app_dot_proto_dot_account__pb2.UserDisconnectRequested.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class DeletionAccountGdprGdprRequestDataDeletionResponseServiceStub(object):
    """Publishes a message to the Deletion Account Gdpr channel. (deletion_account_gdpr GdprRequestDataDeletionResponse)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OnMessage = channel.unary_unary(
                '/accelbyte.iam.account.v1.DeletionAccountGdprGdprRequestDataDeletionResponseService/OnMessage',
                request_serializer=app_dot_proto_dot_account__pb2.GdprRequestDataDeletionResponse.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class DeletionAccountGdprGdprRequestDataDeletionResponseServiceServicer(object):
    """Publishes a message to the Deletion Account Gdpr channel. (deletion_account_gdpr GdprRequestDataDeletionResponse)
    """

    def OnMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeletionAccountGdprGdprRequestDataDeletionResponseServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OnMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OnMessage,
                    request_deserializer=app_dot_proto_dot_account__pb2.GdprRequestDataDeletionResponse.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'accelbyte.iam.account.v1.DeletionAccountGdprGdprRequestDataDeletionResponseService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DeletionAccountGdprGdprRequestDataDeletionResponseService(object):
    """Publishes a message to the Deletion Account Gdpr channel. (deletion_account_gdpr GdprRequestDataDeletionResponse)
    """

    @staticmethod
    def OnMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/accelbyte.iam.account.v1.DeletionAccountGdprGdprRequestDataDeletionResponseService/OnMessage',
            app_dot_proto_dot_account__pb2.GdprRequestDataDeletionResponse.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
